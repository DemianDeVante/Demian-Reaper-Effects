// Copyright 2006, Thomas Scott Stillwell
// All rights reserved.
//
//Redistribution and use in source and binary forms, with or without modification, are permitted 
//provided that the following conditions are met:
//
//Redistributions of source code must retain the above copyright notice, this list of conditions 
//and the following disclaimer. 
//
//Redistributions in binary form must reproduce the above copyright notice, this list of conditions 
//and the following disclaimer in the documentation and/or other materials provided with the distribution. 
//
//The name of Thomas Scott Stillwell may not be used to endorse or 
//promote products derived from this software without specific prior written permission. 
//
//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR 
//IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND 
//FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS 
//BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
//PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
//STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF 
//THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//(ZenoMOD)

desc:D 1175 Compressor 
//tags: dynamics compressor
//author: Stillwell

slider1:-10<-60,10,0.1>-Threshold (dB)
slider2:1<0,4,1{4,8,12,20,100}>-Ratio
slider3:0<-20,20,0.1>-Gain (dB)
slider4:1600<20,2000,10>-Attack (ï¿½s)
slider5:200<20,1000,1>-Release (ms)
slider6:100<0,100,0.1>-Mix (%)

slider64:<-24,0>-GR

slider61:150<0,1000,1>-Peak Decay (ms)
slider62:0.0<-60.0,0.0,0.1>-L (dBFS)
slider63:0.0<-60.0,0.0,0.1>-R (dBFS)

import ui-lib.jsfx-inc
filename:0,themes/bitmap-simple/theme-cyan.png
needs_slider_update

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
  freemem = ui_setup(1000000);

  log2db = 8.6858896380650365530225783783321; // 20 / ln(10)
  db2log = 0.11512925464970228420089957273422; // ln(10) / 20 
  attime=0.010;
  reltime=0.100;
  ratio=0;
  cratio=0;
  rundb=0;
  overdb=0;
  ratatcoef = exp(-1/(0.00001 * srate));
  ratrelcoef = exp(-1/(0.5 * srate));
  atcoef=exp(-1/(attime * srate));
  relcoef=exp(-1/(reltime * srate));
  mix=1;
  gr_meter=1;
  gr_meter_decay = exp(1/(1*srate));
  amp_LO = 0.001;
  dB_LO = -60.0;
  peak_L = 
  peak_R =  0.0;
  peak_L_dB = 
  peak_R_dB = dB_LO;
  
  function peak_dB (a) local (p, dB)
  (
    a <= amp_LO ? p = dB_LO : dB = 8.6562*log(a);
  );
  
  function peak (sample) local (in) instance (p)
  (
    in = abs(sample);
    in > p ? p = in : p = p*decay;
  );
  function slider_update_function() (
      needs_slider_update = 0;
      //------ Previous @slider code
      thresh = slider1;
      threshv = exp(thresh * db2log);
      ratio = (slider2==0 ? 4 : (slider2==1 ? 8 : (slider2 == 2 ? 12 : (slider2 == 3 ? 20 : 20 ))));
      slider2 == 4 ? (allin=1; cratio=20;) : (allin=0; cratio = ratio;);
      cthresh = (softknee ? (thresh -3) : thresh);
      cthreshv = exp(cthresh * db2log);
      makeup = slider3;
      makeupv = exp((makeup+autogain) * db2log);
      attime = slider4 / 1000000;
      reltime = slider5 / 1000;
      atcoef=exp(-1/(attime * srate));
      relcoef=exp(-1/(reltime * srate));
      mix=slider6/100;
      
      decay = exp(-1.0/(slider61*srate*0.001));
      //------ Previous @slider code
  );

@slider
  slider_update_function()
  
@block
  peak_L_dB = peak_dB(peak_L);
  peak_R_dB = peak_dB(peak_R);

  slider62 = peak_L_dB;
  slider63 = peak_R_dB;

  needs_slider_update ? slider_update_function();


@sample
  ospl0 = spl0;
  ospl1 = spl1;
  aspl0 = abs(spl0);
  aspl1 = abs(spl1);
  maxspl = max(aspl0, aspl1);
  maxspl = maxspl * maxspl;
  runave = maxspl + rmscoef * (runave - maxspl);
  det = sqrt(max(0,runave));

  overdb = 2.08136898 * log(det/cthreshv) * log2db;
  overdb = max(0,overdb);

  overdb - rundb > 5 ? (averatio = 4;);

  overdb > rundb ? (
    rundb = overdb + atcoef * (rundb - overdb);
    runratio = averatio + ratatcoef * (runratio - averatio);
  ) : (
    rundb = overdb + relcoef * (rundb - overdb);
    runratio = averatio + ratrelcoef * (runratio - averatio);
  );
  overdb = rundb;
  averatio = runratio;

  allin ? (
    cratio = 12 + averatio;
  ) : (
    cratio = ratio;
  );
  
  gr = -overdb * (cratio-1)/cratio;
  grv = exp(gr * db2log);
  
  runmax = maxover + relcoef * (runmax - maxover);  // highest peak for setting att/rel decays in reltime
  maxover = runmax;

  grv < gr_meter ? gr_meter=grv : ( gr_meter*=gr_meter_decay; gr_meter>1?gr_meter=1; );

  spl0 *= grv * makeupv * mix;
  spl1 *= grv * makeupv * mix;  
  
  spl0 += ospl0 * (1-mix);
  spl1 += ospl1 * (1-mix);
  
  slider64 = log10(gr_meter)*20;
  
  peak_L = L.p.peak(spl0);
  peak_R = R.p.peak(spl1);


@gfx 350 300 // request horizontal/vertical heights (0 means dont care)

  function custom_gfx_func(gfx_w, gfx_h, mouse_x, mouse_y) (
    gr_meter *= exp(1/30); gr_meter>1?gr_meter=1; // decay meter here so if the audio processing stops it doesnt "stick"
    gfx_r=1; gfx_g=gfx_b=0; gfx_a=0.8;
    
    meter_bot=20;
    meter_h=min(gfx_h,32);
    xscale=gfx_w*20/meter_bot;

    gfx_y=0;
    gfx_x=gfx_w + log10(gr_meter)*xscale;
    gfx_rectto(gfx_w,meter_h);

    gfx_r=gfx_g=gfx_b=1.0; gfx_a=0.6;

    s2=sqrt(2)/2;
    g = s2;
    while(
      gfx_x=gfx_w + log10(g)*xscale;
      gfx_x >= 0 ? 
      (
        gfx_y=0;
        gfx_lineto(gfx_x,meter_h,0);
        gfx_y=meter_h-gfx_texth;
        gfx_x+=2;
        gfx_drawnumber(log10(g)*20,0);
        gfx_drawchar($'d');
        gfx_drawchar($'B');
      );
      g*=s2;
      gfx_x >=0;
    );
    gfx_a=1;

    gfx_x=0; gfx_y=meter_h/2 - gfx_texth/2;
    gfx_drawnumber(log10(gr_meter)*20,1);
    gfx_drawchar($'d');
    gfx_drawchar($'B');
  );

  function dem_min_ui_size(dem_min_ui_width, dem_min_ui_height) (
    (gfx_h <= dem_min_ui_height) ? (
      ui_push_rect(0,0,gfx_w,dem_min_ui_height);
      gfx_h = dem_min_ui_height
    );
  );

  function gfx_ui_automate_slider(slidervar*, new_value) (
    slidervar !== new_value ? (
      slidervar = new_value;
      slider_automate(slidervar);
    );
    new_value;
  );

  function gfx_ui_layout_textnumber(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_clear(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    value;
  );
  
  function gfx_ui_layout_textnumber_2(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_dial_rounded(dem_theme, slidervar*, low, high, bias, default, step) (
    slidervar != floor(slidervar._ui_gen_float/step + 0.5)*step ? slidervar._ui_gen_float = slidervar;
    slidervar._ui_gen_float = control_dial(dem_theme, slidervar._ui_gen_float, low, high, bias, default);
    gfx_ui_automate_slider(slidervar, floor(slidervar._ui_gen_float/step + 0.5)*step);
  );

  function gfx_ui_layout_text(title, text) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      ui_text(text);
    ui_pop();
  );

  function gfx_ui_layout_title(title) (
    gfx_ui_layout_text(title, "");
  );

  function gfx_ui_radio_option(value, optionValue, optionText) (
    ui_align(0.1, 0.5);
    ui_split_left(30);
      value = control_radio(value, optionValue);
    ui_pop();
    ui_click() ? value = optionValue;
    ui_text(optionText);
    value;
  );

  function dem_mcp_ui() (
    control_start("main", "bitmap-simple", 0);

    ui_screen() === "main" ? (
      ui_split_leftratio(2/5);
        ui_split_topratio(1/2);
          gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber_down_title("Thres", slider1, "%.1f dB"));
          gfx_ui_dial_rounded(7,slider1, -60, 10, 0, -10, 0.1);
        ui_split_next();
          gfx_ui_automate_slider(slider3, gfx_ui_layout_textnumber_down_title("Gain", slider3, "%.1f dB"));
          gfx_ui_dial_rounded(6,slider3, -20, 20, 0, 0, 0.1);
        ui_pop();
      ui_pop();
      ui_split_topratio(1/2);
        ui_split_leftratio(4/10);
          gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber_down_value("Ratio", slider2, sprintf(#,"%i%s",ratio,":1")));
          gfx_ui_dial_rounded(9, slider2, 0, 4, 0, 1, 1);
        ui_pop();
          gfx_ui_automate_slider(slider4, gfx_ui_layout_textnumber_down_title("Atk", slider4, "Atk"));
          gfx_ui_dial_rounded(7,slider4, 20, 2000, log(2000/20), 1600, 10);
      ui_split_next();
      ui_split_topratio(9/10);
        ui_split_leftratio(4/10);
          gfx_ui_automate_slider(slider6, gfx_ui_layout_textnumber_down_title("Mix", slider6, "Mix"));
          gfx_ui_dial_rounded(9,slider6, 0, 100, 2, 100, 0.1);
        ui_pop();
          gfx_ui_automate_slider(slider5, gfx_ui_layout_textnumber_down_title("Rel", slider5, "Rel"));
          gfx_ui_dial_rounded(7,slider5, 20, 1000, log(1000/20), 200, 1);
      ui_pop();
      ui_pop();

    ) : control_system();
  );

  function dem_full_ui() (
    control_start("main", "bitmap-simple", 0);

    ui_screen() === "main" ? (
      ui_split_leftratio(1/3);
        ui_split_topratio(1/2);
          gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber("Threshold", slider1, "%.1f dB"));
          gfx_ui_dial_rounded(7,slider1, -60, 10, 0, -10, 0.1);
        ui_split_next();
          gfx_ui_automate_slider(slider3, gfx_ui_layout_textnumber("Gain", slider3, "%.1f dB"));
          gfx_ui_dial_rounded(6,slider3, -20, 20, 0, 0, 0.1);
        ui_pop();
      ui_pop();
      ui_split_leftratio(1);
        ui_split_topratio(1/2);
          ui_split_leftratio(1/2);
            ui_split_leftratio(1/10);
            ui_pop();
            ui_split_leftratio(1);
              gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber("Ratio", slider2, sprintf(#,"%i%s",ratio,":1")));
              gfx_ui_dial_rounded(9, slider2, 0, 4, 0, 1, 1);
            ui_pop();
          ui_split_next();
          ui_split_leftratio(3/4);
            ui_split_leftratio(3/10);
            ui_pop();
            ui_split_leftratio(1);
              gfx_ui_automate_slider(slider4, gfx_ui_layout_textnumber("Attack", slider4, "%i us"));
              gfx_ui_dial_rounded(7,slider4, 20, 2000, log(2000/20), 1600, 10);
            ui_pop();
          ui_pop();
          ui_pop();
        ui_split_next();
          ui_split_leftratio(1/2);
            ui_split_leftratio(7/10);
              gfx_ui_automate_slider(slider6, gfx_ui_layout_textnumber("Mix", slider6, "%.1f %%"));
              gfx_ui_dial_rounded(9,slider6, 0, 100, 2, 100, 0.1);
            ui_pop();
          ui_split_next();
          ui_split_leftratio(3/4);
            ui_split_leftratio(7/10);
              gfx_ui_automate_slider(slider5, gfx_ui_layout_textnumber("Release", slider5, "%i ms"));
              gfx_ui_dial_rounded(7,slider5, 20, 1000, log(1000/20), 200, 1);
          ui_pop();
          ui_pop();
          ui_pop();
        ui_pop();
      ui_pop();
    ) : control_system();
  );

  dem_initial_gfx_width = 350;  // inital width in @gfx width height
  dem_initial_gfx_height = 300;  // inital height in @gfx width height
  dem_max_mcp_width = 120;   // maximum embedded width
  dem_max_mcp_height = (gfx_w *(dem_initial_gfx_height/dem_initial_gfx_width)); // keep ratio

  gfx_w <= dem_max_mcp_width ? (
    uix_default_fontsize = 7;
    dem_min_ui_size(dem_max_mcp_width, dem_max_mcp_height);
    dem_mcp_ui();

  ) : (
    uix_default_fontsize = 12;
    //dem_min_ui_size(121, 121);
    dem_full_ui();
  );


  ui_interacted() ? needs_slider_update = 1;
