// This effect Copyright (C) 2004 and later Cockos Incorporated
// License: LGPL - http://www.gnu.org/licenses/lgpl.html

desc:D Distortion
//tags: guitar distortion waveshaper
//author: Cockos
slider4:2<0,2,1{Left,Right,Stereo}>-Channel Mode

slider1:20<0,50,1>-Gain (dB)
slider2:6<1,10,1>-Hardness
slider3:-12<-40,0,1>-Max Volume (dB)

import ui-lib.jsfx-inc
filename:0,themes/bitmap-simple/theme-cyan.png
needs_slider_update

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
  freemem = ui_setup(1000000);
  ext_tail_size=-2;
  function slider_update_function() (
      needs_slider_update = 0;
      //------ Previous @slider code
      preamp=2^(slider1/6);
      soft=2^slider2;
      maxv=2 ^ (slider3/6);

      //maxv=0.5 * (soft+maxv - sqrt((soft+maxv)*(soft+maxv)-4*(maxv*(soft-1)-1)));
      //------ Previous @slider code
  );

@slider
  slider_update_function()

@block
  needs_slider_update ? slider_update_function();

@sample

  slider4 != 1 ? (
  spl0*=preamp;
  t=abs(spl0);
  t > maxv ? 
  (
    s=sign(spl0);
    diff=t-maxv;
    spl0=s*(maxv + diff/(soft+diff));
  );

  );

  slider4 != 0 ? (
  spl1*=preamp;
  t=abs(spl1);
  t > maxv ? 
  (
    s=sign(spl1);
    diff=t-maxv;
    spl1=s*(maxv + diff/(soft+diff));
  );

  );

@gfx 240 120

  function dem_min_ui_size(dem_min_ui_width, dem_min_ui_height) (
    (gfx_h <= dem_min_ui_height) ? (
      ui_push_rect(0,0,gfx_w,dem_min_ui_height);
      gfx_h = dem_min_ui_height
    );
  );

  function gfx_ui_automate_slider(slidervar*, new_value) (
    slidervar !== new_value ? (
      slidervar = new_value;
      slider_automate(slidervar);
    );
    new_value;
  );

  function gfx_ui_layout_textnumber(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_clear(title, value, format) local(h) (
    value;
  );

  function gfx_ui_dial_rounded(dem_theme, slidervar*, low, high, bias, default, step) (
    slidervar != floor(slidervar._ui_gen_float/step + 0.5)*step ? slidervar._ui_gen_float = slidervar;
    slidervar._ui_gen_float = control_dial(dem_theme, slidervar._ui_gen_float, low, high, bias, default);
    gfx_ui_automate_slider(slidervar, floor(slidervar._ui_gen_float/step + 0.5)*step);
  );

  function gfx_ui_layout_text(title, text) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      ui_text(text);
    ui_pop();
  );

  function gfx_ui_layout_title(title) (
    gfx_ui_layout_text(title, "");
  );

  function gfx_ui_radio_option(value, optionValue, optionText) (
    ui_align(0.1, 0.5);
    ui_split_left(30);
      value = control_radio(value, optionValue);
    ui_pop();
    ui_click() ? value = optionValue;
    ui_text(optionText);
    value;
  );

  function dem_mcp_ui() (
    control_start("main", "bitmap-simple", 0);
    ui_screen() === "main" ? (
      ui_split_leftratio(2/5);
            gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber_down_value("Gain", slider1, "%i dB"));
            gfx_ui_dial_rounded(6,slider1, 0, 50, 0, 20, 1);
      ui_pop();
      ui_split_leftratio(1/3);
            gfx_ui_automate_slider(slider3, gfx_ui_layout_textnumber_clear("Max Volume", slider3, "%i dB"));
            gfx_ui_dial_rounded(9,slider3, -40, 0, 0, -12, 1);
      ui_pop();
      ui_split_leftratio(1);
            gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber_down_title("Hard", slider2, "%i"));
            gfx_ui_dial_rounded(7,slider2, 1, 10, log(10/1), 6, 1);
      ui_pop();
    ) : control_system();
  );

  function dem_full_ui() (
    control_start("main", "bitmap-simple", 0);

    ui_screen() === "main" ? (
      ui_split_topratio(1/1); // single row
        ui_split_leftratio(3/3);
          // row 1, group 1
          ui_split_leftratio(1/3);
            gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber("Gain", slider1, "%i dB"));
            gfx_ui_dial_rounded(6,slider1, 0, 50, 0, 20, 1);
          ui_split_next();
            gfx_ui_automate_slider(slider3, gfx_ui_layout_textnumber("Max Volume", slider3, "%i dB"));
            gfx_ui_dial_rounded(9,slider3, -40, 0, 0, -12, 1);
          ui_split_next();
            gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber("Hardness", slider2, "%i"));
            gfx_ui_dial_rounded(7,slider2, 1, 10, log(10/1), 6, 1);
          ui_pop();
        ui_pop();
      ui_pop();
    ) : control_system();
  );

  dem_initial_gfx_width = 240;  // inital width in @gfx width height
  dem_initial_gfx_height = 120;  // inital height in @gfx width height
  dem_max_mcp_width = 120;   // maximum embedded width
  dem_max_mcp_height = (gfx_w *(dem_initial_gfx_height/dem_initial_gfx_width)); // keep ratio

  gfx_w <= dem_max_mcp_width ? (
    uix_default_fontsize = 7;
    dem_min_ui_size(dem_max_mcp_width, dem_max_mcp_height);
    dem_mcp_ui();

  ) : (
    uix_default_fontsize = 12;
    //dem_min_ui_size(121, 121);
    dem_full_ui();
  );

  ui_interacted() ? needs_slider_update = 1;
