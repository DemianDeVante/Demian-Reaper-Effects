// (C) 2006, Michael Gruhn.

// NO WARRANTY IS GRANTED. THIS PLUG-IN IS PROVIDED ON AN "AS IS" BASIS, WITHOUT
// WARRANTY OF ANY KIND. NO LIABILITY IS GRANTED, INCLUDING, BUT NOT LIMITED TO,
// ANY DIRECT OR INDIRECT,  SPECIAL,  INCIDENTAL OR CONSEQUENTIAL DAMAGE ARISING
// OUT OF  THE  USE  OR INABILITY  TO  USE  THIS PLUG-IN,  COMPUTER FAILTURE  OF
// MALFUNCTION INCLUDED.  THE USE OF THE SOURCE CODE,  EITHER  PARTIALLY  OR  IN
// TOTAL, IS ONLY GRANTED,  IF USED IN THE SENSE OF THE AUTHOR'S INTENTION,  AND
// USED WITH ACKNOWLEDGEMENT OF THE AUTHOR. FURTHERMORE IS THIS PLUG-IN A  THIRD
// PARTY CONTRIBUTION,  EVEN IF INCLUDED IN REAPER(TM),  COCKOS INCORPORATED  OR
// ITS AFFILIATES HAVE NOTHING TO DO WITH IT.  LAST BUT NOT LEAST, BY USING THIS
// PLUG-IN YOU RELINQUISH YOUR CLAIM TO SUE IT'S AUTHOR, AS WELL AS THE CLAIM TO
// ENTRUST SOMEBODY ELSE WITH DOING SO.

desc:D Ping Pong Pan
//tags: modulation stereo
//author: LOSER

slider1:.25<0,20,.1>-Frequency (Hz)
slider2:75<0,100,1>-Width (%)

import ui-lib.jsfx-inc
filename:0,themes/bitmap-simple/theme-cyan.png
needs_slider_update

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init
  freemem = ui_setup(1000000);
  function slider_update_function() (
    	needs_slider_update = 0;
    	//------ Previous @slider code
      x=(2*$pi*slider1)/srate;
      width = slider2/100;
    	//------ Previous @slider code
  );
@slider
  slider_update_function();

@block
  needs_slider_update ? slider_update_function();

@sample
  pan = min( max( (sin(t)) * width, -1 ) , 1 );

  spl0 *= (pan > 0 ? 1-pan:1);
  spl1 *= (pan < 0 ? 1+pan:1);

  t=t+x;

@gfx 240 120

  function dem_min_ui_size(dem_min_ui_width, dem_min_ui_height) (
    (gfx_h <= dem_min_ui_height) ? (
      ui_push_rect(0,0,gfx_w,dem_min_ui_height);
      gfx_h = dem_min_ui_height
    );
  );

  function gfx_ui_automate_slider(slidervar*, new_value) (
    slidervar !== new_value ? (
      slidervar = new_value;
      slider_automate(slidervar);
    );
    new_value;
  );

  function gfx_ui_layout_textnumber(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_up_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_title(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      ui_text(title);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_down_value(title, value, format) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_bottom(h);
      value = control_hidden_textnumber(value, value*1.00000001, format);
    ui_pop();
    value;
  );

  function gfx_ui_layout_textnumber_clear(title, value, format) local(h) (
    value;
  );

  function gfx_ui_dial_rounded(dem_theme, slidervar*, low, high, bias, default, step) (
    slidervar != floor(slidervar._ui_gen_float/step + 0.5)*step ? slidervar._ui_gen_float = slidervar;
    slidervar._ui_gen_float = control_dial(dem_theme, slidervar._ui_gen_float, low, high, bias, default);
    gfx_ui_automate_slider(slidervar, floor(slidervar._ui_gen_float/step + 0.5)*step);
  );

  function gfx_ui_layout_text(title, text) local(h) (
    h = max((ui_height() - 60)/2, ui_height()*0.2);
    ui_split_top(h);
      ui_text(title);
    ui_pop();
    ui_split_bottom(h);
      ui_text(text);
    ui_pop();
  );

  function gfx_ui_layout_title(title) (
    gfx_ui_layout_text(title, "");
  );

  function gfx_ui_radio_option(value, optionValue, optionText) (
    ui_align(0.1, 0.5);
    ui_split_left(30);
      value = control_radio(value, optionValue);
    ui_pop();
    ui_click() ? value = optionValue;
    ui_text(optionText);
    value;
  );

  function dem_mcp_ui() (
    control_start("main", "bitmap-simple");
    ui_screen() === "main" ? (
      ui_split_topratio(1/1); // single row
        ui_split_leftratio(2/2);
          // row 1, group 1
          ui_split_leftratio(1/2);
            gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber_down_value("Frequency", slider1, "%.1f Hz"));
            gfx_ui_dial_rounded(8,slider1, 0, 20, 2, .25, .1);
          ui_split_next();
            gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber_down_title("Width", slider2, "%i %%"));
            gfx_ui_dial_rounded(7,slider2, 0, 100, 0, 75, 1);
          ui_pop();
        ui_pop();
      ui_pop();
    ) : control_system();
  );

  function dem_full_ui() (
    control_start("main", "bitmap-simple");
    ui_screen() === "main" ? (
      ui_split_topratio(1/1); // single row
        ui_split_leftratio(2/2);
          // row 1, group 1
          ui_split_leftratio(1/2);
            gfx_ui_automate_slider(slider1, gfx_ui_layout_textnumber("Frequency", slider1, "%.1f Hz"));
            gfx_ui_dial_rounded(8,slider1, 0, 20, 2, .25, .1);
          ui_split_next();
            gfx_ui_automate_slider(slider2, gfx_ui_layout_textnumber("Width", slider2, "%i %%"));
            gfx_ui_dial_rounded(7,slider2, 0, 100, 0, 75, 1);
          ui_pop();
        ui_pop();
      ui_pop();
    ) : control_system();
  );

  dem_initial_gfx_width = 240;  // inital width in @gfx width height
  dem_initial_gfx_height = 120;  // inital height in @gfx width height
  dem_max_mcp_width = 120;   // maximum embedded width
  dem_max_mcp_height = (gfx_w *(dem_initial_gfx_height/dem_initial_gfx_width)); // keep ratio

  gfx_w <= dem_max_mcp_width ? (
    uix_default_fontsize = 7;
    dem_min_ui_size(dem_max_mcp_width, dem_max_mcp_height);
    dem_mcp_ui();

  ) : (
    uix_default_fontsize = 12;
    //dem_min_ui_size(121, 121);
    dem_full_ui();
  );

  ui_interacted() ? needs_slider_update = 1;
